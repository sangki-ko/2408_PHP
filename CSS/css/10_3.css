/* 가상 선택자(Pseudo selector)
    HTML 요소의 상태에 따라 선택해서 스타일을 지정하는 선택자
    기본형태) 선택자 : 가상클래스명
*/
a:link {
    /* 한 번도 방문한 적이 없는 링크 요소를 선택 */
    color: red;
}

/* 한 번이라도 방문했던 링크 요소를 선택 */
a:visited {
    color: green;
}

/* 마우스 커서가 올라가 있는 요소를 선택
    a태그 뿐만 아니라 다른 태그들도 가능 */
a:hover {
    color: red;    
}

/* 링크를 클릭하고 있는 요소를 선택 */
a:active {
    font-size: 5rem;
}

/* 포커스가 적용되어 있는 요소를 선택 */
input:focus {
    border: 3px solid red;
    outline: none; /* input 태그의 기본 외곽선 제거 */
    border-radius: 3px;
}

/* 체크된 상태의 input 요소를 선택 */
input:checked + label {
    background-color: aqua;
}

/* 문서 내부 링크의 현재 활성화 된 요소를 선택 */
#p1:target {
    background-color: bisque;
}
#p2:target {
    background-color: chocolate;
}

/* 해당 선택자의 요소를 제외한 나머지 요소에 스타일을 적용 */
.container :not(h3) { /* not 가상 클래스 적용 */
    /* color: red; */
}

/* n번째 자식 요소에 스타일을 적용 */
.container :nth-child(3) {
    color: aqua;
}

.container :nth-child(6) {
    color: aqua;
}

/* n번째 자식 요소부터 스타일 적용
    n일 경우 : 해당 자식 요소 기준으로 스타일 적용 (예 n + 5 = 5번째부터 스타일 적용) 
    -n일 경우 : 해당 자식까지 스타일 적용 (예 -n + 5 = 5번째까지 스타일 적용)
*/
.container :nth-child(-n + 5) {
    color: aquamarine;
}

.container :nth-child(n + 2):nth-child(-n + 4) {
    color: pink;
}

/* 짝수 또는 홀수 번째 자식 요소에 스타일 적용
    odd : 홀수 // even : 짝수
    */
.container :nth-child(odd) {
    background-color: green;
}

.container :nth-child(even) {
    background-color: rgb(14, 247, 14);
}

/* 부모 요소 내에서 특정 유형의 n번째 자식을 선택  */
.container span:nth-of-type(1) {
    font-size: 2rem;
}


